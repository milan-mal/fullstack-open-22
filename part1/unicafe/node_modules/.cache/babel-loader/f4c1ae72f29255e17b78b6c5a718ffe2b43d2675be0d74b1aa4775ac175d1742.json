{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProgramData\\\\Development\\\\react\\\\fullstack-open-22\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticLine = _ref => {\n  let {\n    statType,\n    statValue,\n    statUnit\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [statType, \": \", statValue, \" \", statUnit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n_c = StatisticLine;\nconst Statistics = _ref2 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref2;\n  let sumFeedb = good + neutral + bad;\n  if (sumFeedb > 0) {\n    let averageFeedb = (good - bad) / sumFeedb;\n    let positiveFeedb = good / sumFeedb * 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        statType: \"good\",\n        statValue: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        statType: \"neutral\",\n        statValue: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        statType: \"bad\",\n        statValue: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        statType: \"all\",\n        statValue: sumFeedb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        statType: \"average\",\n        statValue: averageFeedb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        statType: \"positive\",\n        statValue: positiveFeedb,\n        statUnit: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No feedback given\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n_c2 = Statistics;\nconst Button = _ref3 => {\n  let {\n    handleClick,\n    text\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n_c3 = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StatisticLine\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","StatisticLine","statType","statValue","statUnit","Statistics","good","neutral","bad","sumFeedb","averageFeedb","positiveFeedb","Button","handleClick","text","App","setGood","setNeutral","setBad"],"sources":["C:/ProgramData/Development/react/fullstack-open-22/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\r\n\r\nconst StatisticLine = ({ statType, statValue, statUnit }) => (\r\n  <div>\r\n    <p>{statType}: {statValue} {statUnit}</p>\r\n  </div>\r\n)\r\n\r\nconst Statistics = ({ good, neutral, bad }) => {\r\n  \r\n  let sumFeedb = good + neutral + bad\r\n\r\n  if (sumFeedb > 0) {\r\n    let averageFeedb = (good - bad) / sumFeedb\r\n    let positiveFeedb = good / sumFeedb * 100\r\n\r\n    return (\r\n      <div>\r\n        <h1>statistics</h1>\r\n        <StatisticLine statType='good' statValue={good} />\r\n        <StatisticLine statType='neutral' statValue={neutral} />\r\n        <StatisticLine statType='bad' statValue={bad} />\r\n        <StatisticLine statType='all' statValue={sumFeedb} />\r\n        <StatisticLine statType='average' statValue={averageFeedb} />\r\n        <StatisticLine statType='positive' statValue={positiveFeedb} statUnit='%'/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return <p>No feedback given</p>\r\n}\r\n\r\nconst Button = ({ handleClick, text }) => (\r\n  <button onClick={handleClick}>{text}</button>\r\n)\r\n\r\nconst App = () => {\r\n  // save clicks of each button to its own state\r\n  const [good, setGood] = useState(0)\r\n  const [neutral, setNeutral] = useState(0)\r\n  const [bad, setBad] = useState(0)\r\n\r\n  return (\r\n    <div>\r\n      <h1>give feedback</h1>\r\n      <Button handleClick={() => setGood(good + 1)} text='good' />\r\n      <Button handleClick={() => setNeutral(neutral + 1)} text='neutral' />\r\n      <Button handleClick={() => setBad(bad + 1)} text='bad' />\r\n      <Statistics good={good} neutral={neutral} bad={bad} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}